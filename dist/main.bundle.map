{"version":3,"sources":["webpack:///./src/app/app.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/json-data.service.ts","webpack:///./src/app/Guard/auth.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/components/layout/layout.component.ts","webpack:///./src/app/components/loginComponent/forgot-password/forgot-password.component.ts","webpack:///./src/app/components/loginComponent/login/login.component.ts","webpack:///./src/app/components/loginComponent/password-reset/password-reset.component.ts","webpack:///./src/app/components/loginComponent/verify-email/verify-email.component.ts","webpack:///./src/app/components/logout/logout.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about-us/about-us.component.ts","webpack:///./src/app/components/appbar/appbar.component.ts","webpack:///./src/app/components/candidate-search/candidate-search.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/event-post/event-post.component.ts","webpack:///./src/app/components/job-post/job-post.component.ts","webpack:///./src/app/components/loginComponent/candidate-register/candidate-register.component.ts","webpack:///./src/app/components/loginComponent/login-footer/login-footer.component.ts","webpack:///./src/app/components/loginComponent/login-header/login-header.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/about-us/about-us.component.css","webpack:///./src/app/components/appbar/appbar.component.css","webpack:///./src/app/components/candidate-search/candidate-search.component.css","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/event-post/event-post.component.css","webpack:///./src/app/components/job-post/job-post.component.css","webpack:///./src/app/components/layout/layout.component.css","webpack:///./src/app/components/loginComponent/candidate-register/candidate-register.component.css","webpack:///./src/app/components/loginComponent/forgot-password/forgot-password.component.css","webpack:///./src/app/components/loginComponent/login-footer/login-footer.component.css","webpack:///./src/app/components/loginComponent/login-header/login-header.component.css","webpack:///./src/app/components/loginComponent/login/login.component.css","webpack:///./src/app/components/loginComponent/password-reset/password-reset.component.css","webpack:///./src/app/components/loginComponent/verify-email/verify-email.component.css","webpack:///./src/app/components/logout/logout.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/about-us/about-us.component.html","webpack:///./src/app/components/appbar/appbar.component.html","webpack:///./src/app/components/candidate-search/candidate-search.component.html","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/event-post/event-post.component.html","webpack:///./src/app/components/job-post/job-post.component.html","webpack:///./src/app/components/layout/layout.component.html","webpack:///./src/app/components/loginComponent/candidate-register/candidate-register.component.html","webpack:///./src/app/components/loginComponent/forgot-password/forgot-password.component.html","webpack:///./src/app/components/loginComponent/login-footer/login-footer.component.html","webpack:///./src/app/components/loginComponent/login-header/login-header.component.html","webpack:///./src/app/components/loginComponent/login/login.component.html","webpack:///./src/app/components/loginComponent/password-reset/password-reset.component.html","webpack:///./src/app/components/loginComponent/verify-email/verify-email.component.html","webpack:///./src/app/components/logout/logout.component.html","webpack:///./src/app/services/email.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n// Service for Authentication\n// having two methods login and logout\n// If login then set the user in the localstorage.\n// if logout remove the user from localstorage.\n\n@Injectable()\nexport class AuthenticationService {\n\n  constructor(private http: Http, private router: Router) { }\n\n  login(email, password) {\n\n    return this.http.post('http://localhost:4000/api/authenticate', { email: email, password: password })\n      .map((response: Response) => {\n        const user = response.json();\n        if (user === 'userError') {\n          console.log('id wrong');\n        } else if (user === 'passwordError') {\n          console.log('password wrong');\n        }\n        // console.log(user);\n        // data from response store in variable\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          // here we set that data in localstorage\n        }\n      });\n  }\n\n  logout() {\n    // remove user from local storage\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/authentication.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from 'app/components/loginComponent/login/login.component';\nimport { RequestOptions, Request, RequestMethod } from '@angular/http';\n\n@Injectable()\nexport class JsonDataService {\n\n  public pincode;\n\n  // url to store data from json file for Registration details\n  private urlRegister = 'http://localhost:3001/candidates';\n\n  // url to get pincode info\n  private urlPincode = 'http://localhost:3002/pincodeDetails';\n\n  // url to retrive data from json file for candidate navLinks\n  private urlNavlinks = 'http://localhost:3003/navList';\n\n  // url to get langauges\n  private urlLanguages = 'http://localhost:3003/languages';\n\n  // url to get profession\n  private urlProfession = 'http://localhost:3003/profession';\n\n  // url to get locations\n  private urlLocations = 'http://localhost:3003/locations';\n\n  // url to get placementCenter\n  private urlPlacementCenter = 'http://localhost:3003/placementCenter';\n\n  public timer;\n\n  constructor(private http: Http, private snackBar: MdSnackBar, private router: Router) { }\n\n  // snackbar notifications\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  // Store Registration details in databse\n  create(formData) {\n    // console.log('service called');\n    // console.log(\"josn data service : \"+formData['fname']); \n    this.http.post('http://localhost:4000/adduser', formData).subscribe(data => {\n      this.openSnackBar(formData.email, 'Register Successfully');\n      this.router.navigate(['/']);\n    }, error => {\n      console.log(error.json());\n    });\n  }\n\n  // get data for by verify email in database\n  getEmail(email) {\n    return this.http.get('http://localhost:4000/checkEmail?email=' + email).map((response: Response) =>[response['_body'], console.log(response['_body'])]\n    \n        );\n  };\n\n  // get json data for langauges and dropdown\n  getNavLinks() {\n    return this.http.get(this.urlNavlinks).map((response: Response) => response.json());\n  };\n  // get json data for langauges and dropdown\n  getLanguages() {\n    return this.http.get(this.urlLanguages).map((response: Response) => response.json());\n  }; // get json data for langauges and dropdown\n  getLocations() {\n    return this.http.get(this.urlLocations).map((response: Response) => response.json());\n  }; // get json data for langauges and dropdown\n  getProfession() {\n    return this.http.get(this.urlProfession).map((response: Response) => response.json());\n  }; // get json data for langauges and dropdown\n  getPlacementCenter() {\n    return this.http.get(this.urlPlacementCenter).map((response: Response) => response.json());\n  }; // get json data for langauges and dropdown\n\n  getPincode(pincode) {\n    return this.http.get(this.urlPincode + '?pincode=' + pincode)\n      .map((response: Response) => response.json());\n  };\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/json-data.service.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n// auth gaurd is used to guard the routes.\n// here we implement CanActivate for Authguard class so that we can check for the route is activated or not\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        // optional parameters\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Guard/auth.guard.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutUsComponent } from 'app/components/about-us/about-us.component';\nimport { DashboardComponent } from 'app/components/dashboard/dashboard.component';\nimport { CandidateSearchComponent } from 'app/components/candidate-search/candidate-search.component';\nimport { CandidateRegisterComponent } from 'app/components/loginComponent/candidate-register/candidate-register.component';\nimport { EmployersComponent } from 'app/components/employers/employers.component';\nimport { EventPostComponent } from 'app/components/event-post/event-post.component';\nimport { JobPostComponent } from 'app/components/job-post/job-post.component';\nimport { LogoutComponent } from 'app/components/logout/logout.component';\nimport { LoginComponent } from 'app/components/loginComponent/login/login.component';\nimport { PasswordResetComponent } from 'app/components/loginComponent/password-reset/password-reset.component';\nimport { ForgotPasswordComponent } from 'app/components/loginComponent/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from 'app/components/loginComponent/verify-email/verify-email.component';\nimport { AuthGuard } from './Guard/auth.guard';\nimport { LayoutComponent } from 'app/components/layout/layout.component';\n// import { LoginGuard } from './Guard/login.guard';\n\n// routes\nconst routes: Routes = [\n  {\n    path: 'home', component: LayoutComponent,\n    children: [\n      { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n      { path: 'aboutUs', component: AboutUsComponent },\n      { path: 'candidateSearch', component: CandidateSearchComponent },\n      { path: 'eventPost', component: EventPostComponent },\n      { path: 'jobPost', component: JobPostComponent },\n    ]\n  },\n  // { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgotPassword', component: ForgotPasswordComponent },\n  { path: 'candidateRegister', component: CandidateRegisterComponent },\n  { path: 'verifyEmail', component: VerifyEmailComponent },\n  { path: 'passwordReset', component: PasswordResetComponent },\n  { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { };\n\nexport const routingComponents = [\n  AboutUsComponent,\n  DashboardComponent,\n  CandidateRegisterComponent,\n  CandidateSearchComponent,\n  EventPostComponent,\n  JobPostComponent,\n  LogoutComponent,\n  PasswordResetComponent,\n  ForgotPasswordComponent,\n  VerifyEmailComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { AuthenticationService } from 'app/services/authentication.service';\nimport { UserService } from 'app/services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AppComponent } from 'app/app.component';\nimport { ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { JsonDataService } from 'app/services/json-data.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css'],\n  providers: [JsonDataService]\n})\nexport class LayoutComponent implements OnInit {\n  public isDarkTheme = false;\n  public navList = [];\n\n  constructor(private authenticationService: AuthenticationService, private appComponent: AppComponent,\n    private snackBar: MdSnackBar, private viewContainerRef: ViewContainerRef, private JsonDataService: JsonDataService) { }\n\n  ngOnInit() {\n    this.JsonDataService.getNavLinks().subscribe(resJsonData => this.getdata(resJsonData));\n  }\n\n  // getdata for navigations\n  getdata(jsonData) {\n    this.navList = jsonData;\n  }\n  toggleTheme() {\n    if (this.isDarkTheme === true) {\n      this.isDarkTheme = false;\n    } else {\n      this.isDarkTheme = true;\n    }\n  }\n\n  // snackBar for notification\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  // on logout click\n  logout() {\n    this.authenticationService.logout();\n    this.openSnackBar('Successfully', 'Logged Out');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/layout/layout.component.ts","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { EmailService } from 'app/services/email.service';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css'],\n  providers: [JsonDataService]\n\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public userForm: FormGroup;\n  public infoobj;\n  private postobject;\n  public candidates;\n  public timer;\n  public emailId = '';\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder, private emailservice: EmailService, private JsonDataService: JsonDataService,\n    private snackBar: MdSnackBar, private viewContainerRef: ViewContainerRef, private router: Router, private emailService: EmailService) {\n    // getting login form data\n    this.userForm = fb.group({\n      email: ['', [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n    });\n  }\n\n  ngOnInit() {\n    this.emailService.getRegister()\n      .subscribe(resEmployeeData => {\n        this.emailId = resEmployeeData.usermail2;\n        console.log(this.emailId);\n      });\n  }\n\n  // snackBar for notification\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  // verify user if already exist or not for password Reset\n  verifyUserReset() {\n    if (this.candidates == 'found,') {\n      this.infoobj = {\n        'to': this.userForm.value.email,\n        'subject': 'Password Reset',\n        'redirect': 'http://localhost:4200/passwordReset',\n        'mailBody': 'Please Click on this link to Reset Account Password'\n      };\n      this.emailservice.postdata(this.infoobj).subscribe(data => this.postobject = data,\n        error => [this.openSnackBar('PASSWORD RESET LINK SENT', 'Please Check your mail'),\n        this.timer = setTimeout(() => this.router.navigate(['/login']), 500)\n        ], () => console.log('finished'));\n    } else {\n      this.openSnackBar('User not Registered', 'Please Register');\n    }\n  }\n\n  // on password reset submit\n  onResetLink() {\n    // console.log(this.userForm.value.email);\n    this.JsonDataService.getEmail(this.userForm.value.email).subscribe(resEmailData => [\n      this.candidates = resEmailData, this.verifyUserReset(), console.log(\"can : \" + this.candidates)\n    ],\n      error => {\n        this.openSnackBar('TECHNICAL ISSUE', 'Please Try after some time');\n      });\n  }\n  onBack() {\n    this.router.navigate(['/login']);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/forgot-password/forgot-password.component.ts","import { AuthenticationService } from 'app/services/authentication.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { EmailService } from 'app/services/email.service';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppComponent } from 'app/app.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [JsonDataService]\n})\nexport class LoginComponent implements OnInit {\n\n  public userForm: FormGroup;\n  public modalVerify: FormGroup;\n  public modalReset: FormGroup;\n  public infoobj;\n  private postobject;\n  public candidates = [];\n  public result: any;\n  public showProgress = false;\n\n\n  public user: any = {};\n  public returnUrl: String;\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder, private emailservice: EmailService, private JsonDataService: JsonDataService,\n    private snackBar: MdSnackBar, private viewContainerRef: ViewContainerRef, private router: Router, private route: ActivatedRoute,\n    private authenticationService: AuthenticationService, private appComponent: AppComponent) {\n\n    // getting login form data\n    this.userForm = fb.group({\n      email: ['', [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,24}$/)]],\n    });\n  }\n\n  // on login submit\n  onSubmit() {\n    console.log(this.userForm.value);\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('currentUser')) {\n      this.redirect();\n    }\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n  }\n\n  // snackBar for notification\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  public forgotPassword() {\n    this.router.navigate(['/forgotPassword']);\n  }\n\n  public verifyEmail() {\n    this.router.navigate(['/verifyEmail']);\n  }\n\n  // on login click\n  login() {\n    this.showProgress = true;\n    this.authenticationService.login(this.userForm.value.email, this.userForm.value.password)\n      .subscribe(\n      data => {\n        [\n          this.router.navigate([this.returnUrl]),\n          this.openSnackBar('WELCOME : ', this.userForm.value.email),\n          // console.log(this.returnUrl)\n        ];\n      },\n      error => {\n        this.openSnackBar('Username OR Password Wrong', 'Try Again');\n        // this.showProgress = false\n      }\n      );\n  }\n\n  redirect() {\n    console.log('redirect');\n    this.router.navigate(['/dashboard']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/login/login.component.ts","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\nimport { EmailService } from 'app/services/email.service';\n// declare var $: any;\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css']\n})\n\nexport class PasswordResetComponent implements OnInit {\n\n  public jsonObj = {};\n  public languages = [];\n  public userForm: FormGroup;\n  public emailId = '';\n  public password = '';\n  public passwordMatchWarning = '';\n\n\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder, private JsonDataService: JsonDataService, private route: ActivatedRoute,\n    private router: Router, private emailService: EmailService) {\n    // register candidate form\n    this.userForm = fb.group({\n      email: [{ value: '', disabled: true }],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,24}$/)]],\n      conPassword: ['', [Validators.required, Validators.pattern(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,24}$/)]],\n    });\n  }\n\n  ngOnInit() {\n    this.emailService.getRegister()\n      .subscribe(resEmployeeData => {\n        this.emailId = resEmployeeData.usermail2;\n        console.log(this.emailId);\n      });\n  }\n\n  getdata(jsonData) {\n    this.jsonObj = jsonData;\n    this.languages = this.jsonObj['languages'];\n  }\n\n  // password confirm Validators\n  passwordValue(pass) {\n    this.password = pass;\n  }\n  conPasswordValue(conPass, pass) {\n    if (pass !== conPass) {\n      this.passwordMatchWarning = 'Password Not Match';\n      (<HTMLInputElement>document.getElementById('resetBtn')).disabled = true;\n    }    else {\n      this.passwordMatchWarning = '';\n      // (<HTMLInputElement> document.getElementById(\"resetBtn\")).disabled = false;\n    }\n  }\n\n  // on form submit\n  onSubmit() {\n    this.userForm.value.email = this.emailId;\n    // console.log(this.userForm.value);\n  }\n\n  // on back button\n  onBack() {\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/password-reset/password-reset.component.ts","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { EmailService } from 'app/services/email.service';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css'],\n  providers: [JsonDataService]\n})\n\nexport class VerifyEmailComponent implements OnInit {\n\n  public userForm: FormGroup;\n  public infoobj;\n  private postobject;\n  public candidates;\n  public timer;\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder, private emailservice: EmailService, private JsonDataService: JsonDataService,\n    private snackBar: MdSnackBar, private viewContainerRef: ViewContainerRef, private router: Router) {\n    // getting login form data\n    this.userForm = fb.group({\n      email: ['', [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n    });\n  }\n\n  ngOnInit() { }\n\n  // snackBar for notification\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  // verify user if already exist or not for registration\n  verifyUserRegistration() {\n    if (this.candidates == 'nouser,') {\n      this.infoobj = {\n        'to': this.userForm.value.email,\n        'subject': 'Email verification',\n        'redirect': 'http://localhost:3000/candidateRegister',\n        'mailBody': 'Please Click on this link to verify your Email'\n      };\n      this.emailservice.postdata(this.infoobj).subscribe(data => this.postobject = data,\n        error => [this.openSnackBar('VERIFICATION MAIL SENT', 'Please Check your MAIL'),\n        this.timer = setTimeout(() => this.router.navigate(['/login']), 500)], () => console.log('finished'));\n    } else {\n      this.openSnackBar('User already Exist', 'Please Login');\n      this.timer = setTimeout(() => this.router.navigate(['/login']), 500);\n    }\n  }\n\n  // on create account submit\n  onVerifyLink() {\n    // console.log(this.userForm.value.email);\n    this.JsonDataService.getEmail(this.userForm.value.email).subscribe(resJsonData => [\n      this.candidates = resJsonData, this.verifyUserRegistration()],\n      error => {\n        this.openSnackBar('TECHNICAL ISSUE', 'Please Try after some time');\n      });\n  }\n\n  // go back to login\n  onBack() {\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/verify-email/verify-email.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/logout/logout.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 525;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 525\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { AuthenticationService } from './services/authentication.service';\nimport { UserService } from './services/user.service';\nimport { AuthGuard } from './Guard/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport 'hammerjs';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from 'app/app-routing.module';\nimport { routingComponents } from 'app/app-routing.module';\nimport { LogoutComponent } from 'app/components/logout/logout.component';\nimport { AppbarComponent } from 'app/components/appbar/appbar.component';\nimport { LoginComponent } from 'app/components/loginComponent/login/login.component';\nimport { LayoutComponent } from 'app/components/layout/layout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { EmailService } from 'app/services/email.service';\nimport { PasswordResetComponent } from 'app/components/loginComponent/password-reset/password-reset.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ForgotPasswordComponent } from 'app/components/loginComponent/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from 'app/components/loginComponent/verify-email/verify-email.component';\nimport { LoginHeaderComponent } from 'app/components/loginComponent/login-header/login-header.component';\nimport { LoginFooterComponent } from 'app/components/loginComponent/login-footer/login-footer.component';\nimport { Md2Module } from 'md2';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot(),\n    Md2Module.forRoot(),\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n  ],\n  providers: [\n    EmailService,\n    JsonDataService,\n    AuthGuard,\n    UserService,\n    AuthenticationService\n  ],\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\n    routingComponents,\n    LogoutComponent,\n    AppbarComponent,\n    LoginComponent,\n    LayoutComponent,\n    PasswordResetComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    LoginHeaderComponent,\n    LoginFooterComponent,\n  ],\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/about-us/about-us.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appbar',\n  templateUrl: './appbar.component.html',\n  styleUrls: ['./appbar.component.css']\n})\nexport class AppbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/appbar/appbar.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-candidate-search',\n  templateUrl: './candidate-search.component.html',\n  styleUrls: ['./candidate-search.component.css']\n})\nexport class CandidateSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/candidate-search/candidate-search.component.ts","import { AuthenticationService } from 'app/services/authentication.service';\nimport { UserService } from 'app/services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AppComponent } from 'app/app.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService, private appComponent: AppComponent) { }\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-post',\n  templateUrl: './event-post.component.html',\n  styleUrls: ['./event-post.component.css']\n})\nexport class EventPostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/event-post/event-post.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-job-post',\n  templateUrl: './job-post.component.html',\n  styleUrls: ['./job-post.component.css']\n})\nexport class JobPostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/job-post/job-post.component.ts","import { Component, OnInit, Inject, } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { JsonDataService } from 'app/services/json-data.service';\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { MdSnackBar, MdSnackBarConfig } from '@angular/material';\nimport { ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { EmailService } from 'app/services/email.service';\n\n@Component({\n  selector: 'app-candidate-register',\n  templateUrl: './candidate-register.component.html',\n  styleUrls: ['./candidate-register.component.css'],\n  providers: [JsonDataService]\n})\nexport class CandidateRegisterComponent implements OnInit {\n\n  public jsonObj = {};\n  public languages = [];\n  public profession = [];\n  public locations = [];\n  public placementCenter = [];\n  public userForm: FormGroup;\n  public emailId = '';\n  public formData = {};\n  public candidates;\n  public timer;\n  public pincode;\n  public pincodeLocation;\n  public areaList = [];\n  public password = '';\n  public passwordMatchWarning = '';\n\n  ngOnInit() {\n    // getting languages and form data from json file\n    this.JsonDataService.getPlacementCenter().subscribe(resJsonData => this.getPlacementCenter(resJsonData));\n\n    this.JsonDataService.getLocations().subscribe(resJsonData => this.getLocations(resJsonData));\n\n    this.JsonDataService.getProfession().subscribe(resJsonData => this.getProfession(resJsonData));\n\n    this.emailService.getRegister()\n      .subscribe(resEmployeeData => {\n        this.emailId = resEmployeeData.usermail2;\n        console.log(this.emailId);\n      });\n  }\n\n  // Getting placement Centers\n  getPlacementCenter(jsonData) {\n    this.placementCenter = jsonData;\n  }\n\n  // Getting data locations\n  getLocations(jsonData) {\n    this.locations = jsonData;\n  }\n\n  // Getting Professions\n  getProfession(jsonData) {\n    this.profession = jsonData;\n  }\n\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder, private JsonDataService: JsonDataService, private route: ActivatedRoute,\n    private router: Router, private http: Http, private emailService: EmailService,\n    private snackBar: MdSnackBar, private viewContainerRef: ViewContainerRef, ) {\n\n    // register candidate form\n    this.userForm = fb.group({\n      fname: ['', [Validators.required, Validators.pattern('[A-Za-z]{2,}')]],\n      lname: ['', [Validators.required, Validators.pattern('[A-Za-z]{2,}')]],\n      gender: ['male', Validators.required],\n      email: [{ value: '', disabled: true }],\n      regId: ['', Validators.required],\n      // dob:'',\n      aadhar: ['', [Validators.required, Validators.pattern(/^\\d{12}$/)]],\n      mob: ['', [Validators.required, , Validators.pattern('[0-9]{10}')]],\n\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,24}$/)]],\n      conPassword: ['', [Validators.required, Validators.pattern(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,24}$/)]],\n\n      profession: ['', [Validators.required]],\n      pincode: ['', [Validators.required, Validators.pattern('[0-9]{6}')]],\n      location: ['', Validators.required],\n      placementCenter: ['', [Validators.required]]\n    });\n  }\n\n  // snackBar for notification\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n  // password confirm Validators\n  passwordValue(pass) {\n    this.password = pass;\n  }\n  conPasswordValue(conPass) {\n    if (this.password !== conPass) {\n      this.passwordMatchWarning = 'Password Not Match';\n      (<HTMLInputElement>document.getElementById('resetBtn')).disabled = true;\n    } else {\n      this.passwordMatchWarning = '';\n      // (<HTMLInputElement> document.getElementById(''resetBtn'')).disabled = false;\n    }\n  }\n\n  // check Pincode\n  getPincode() {\n    this.JsonDataService.getPincode(this.pincode).subscribe(\n      resPincodeData => [this.pincodeLocation = resPincodeData, this.getPincodeLocation()]);\n  }\n\n  // get pincode locations after checking pincode\n  getPincodeLocation() {\n    this.userForm.value.location = '';\n    this.areaList = [];\n    this.pincodeLocation.forEach(element => {\n      this.areaList.push(element['officename'] + ', ' + element['Districtname'] + ', ' + element['statename']);\n    });\n    if (this.areaList.length === 0) {\n      this.openSnackBar('No Location Found', 'Please Try again');\n      // this.areaList.push('Area Not Found');\n    } else {\n      this.openSnackBar(this.areaList.length + ' Locations Found', 'Please Select');\n    }\n  }\n\n  // on userverify button\n  verifyUserRegistration() {\n    if (this.candidates== 'nouser,') {\n      this.userForm.value.email = this.emailId;\n      this.formData = this.userForm.value;\n      console.log(this.formData);\n      this.JsonDataService.create(this.formData);\n      this.openSnackBar('Successfully Register', 'Please Login');\n      this.timer = setTimeout(() => this.router.navigate(['/login']), 500);\n    } else {\n      this.openSnackBar('User already Exist', 'Please Login');\n      this.timer = setTimeout(() => this.router.navigate(['/login']), 500);\n    }\n  }\n\n  // on form submit\n  onRegister() {\n    console.log(this.userForm.value);\n    // console.log(this.emailId);\n    if (this.emailId === '') {\n      this.openSnackBar('No Email Id Present', 'Please Verify Email');\n    } else {\n      this.JsonDataService.getEmail(this.emailId).subscribe(resJsonData => [\n        this.candidates = resJsonData, this.verifyUserRegistration()],\n        error => {\n          this.openSnackBar('TECHNICAL ISSUE', 'Please Try after some time');\n        });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/candidate-register/candidate-register.component.ts","import { Component, OnInit } from '@angular/core';\nimport { JsonDataService } from 'app/services/json-data.service';\n\n@Component({\n  selector: 'app-login-footer',\n  templateUrl: './login-footer.component.html',\n  styleUrls: ['./login-footer.component.css'],\n  providers: [JsonDataService]\n})\nexport class LoginFooterComponent implements OnInit {\n\n  public languages = [];\n  constructor(private JsonDataService: JsonDataService) { }\n\n  ngOnInit() {\n    // getting languages form json file\n    this.JsonDataService.getLanguages().subscribe(resJsonData => this.getdata(resJsonData));\n  }\n  getdata(jsonData) {\n    this.languages = jsonData;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/login-footer/login-footer.component.ts","import { Component, OnInit } from '@angular/core';\nimport { JsonDataService } from 'app/services/json-data.service';\n\n\n@Component({\n  selector: 'app-login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: ['./login-header.component.css'],\n  providers: [JsonDataService]\n})\nexport class LoginHeaderComponent implements OnInit {\n\n  public languages = [];\n  constructor(private JsonDataService: JsonDataService) { }\n  ngOnInit() {\n    // getting languages form json file\n    this.JsonDataService.getLanguages().subscribe(resJsonData => this.getLanguages(resJsonData));\n  }\n  getLanguages(jsonData) {\n    console.log(this.languages);\n\n    this.languages = jsonData;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loginComponent/login-header/login-header.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: Http) { }\n\n  private jwt() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser && currentUser.token) {\n      const headers = new Headers({ 'Authorization': 'Bearer' + currentUser.token });\n      return new RequestOptions({ headers: headers });\n    }\n  }\n\n  getAll() {\n    return this.http.get('http://localhost:4000/api/showuser', this.jwt()).map((response: Response) => response.json());\n  }\n  // create(user:User){\n  //   return this.http.post('http://localhost:3005/users/register',user,this.jwt());\n  // }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 802\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about-us/about-us.component.css\n// module id = 803\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/appbar/appbar.component.css\n// module id = 804\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/candidate-search/candidate-search.component.css\n// module id = 805\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.css\n// module id = 806\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event-post/event-post.component.css\n// module id = 807\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/job-post/job-post.component.css\n// module id = 808\n// module chunks = 1","module.exports = \".fill-remaining-space {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n\\n.navIcon {\\n    padding-right: 10px;\\n}\\n\\nmd-toolbar {\\n    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, .2), 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12);\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {\\n    md-sidenav {\\n        width: 180px;\\n    }\\n    .headerLarge {\\n        display: none;\\n    }\\n    .headerSmall {\\n        display: inline;\\n    }\\n}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {\\n    md-sidenav {\\n        width: 200px;\\n    }\\n    .headerSmall {\\n        display: none;\\n    }\\n    .headerLarge {\\n        display: inline;\\n    }\\n}\\n\\n\\n/*\\nfor large screens*/\\n\\n@media (min-width: 768px) {\\n    md-sidenav {\\n        width: 250px;\\n    }\\n    .headerSmall {\\n        display: none;\\n    }\\n    .headerLarge {\\n        display: inline;\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/layout/layout.component.css\n// module id = 809\n// module chunks = 1","module.exports = \"md-card {\\n    width: 600px;\\n}\\n\\n.formIcons {\\n    padding-bottom: 25px;\\n    color: gray;\\n}\\n\\n.gender {\\n    height: 70px;\\n    padding-bottom: 15px;\\n}\\n\\n.dropdown {\\n    height: 70px;\\n    padding-bottom: 15px;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n.findAreaBtn {\\n    padding: 10px;\\n    height: 70px;\\n    line-height: unset;\\n}\\n\\n.location {\\n    margin-top: 10px;\\n}\\n\\n.areaDropdown {\\n    /*width: 10px;*/\\n}\\n\\n.levelIcon {\\n    padding-top: 0px;\\n    padding-bottom: 12px;\\n}\\n\\nbutton {\\n    font-size: 15px;\\n}\\n\\nmd-card-title {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    font-size: 25px;\\n}\\n\\n.registerBtn {\\n    margin-top: 50px;\\n}\\n\\n.errorStyle {\\n    position: absolute;\\n    font-size: 12px;\\n    -webkit-transition: all .7s;\\n    transition: all .7s;\\n    color: #F44336;\\n}\\n\\n.googleBtn {\\n    background-color: #F44336;\\n    color: white;\\n}\\n\\n.fbBtn {\\n    background-color: #3f51b5;\\n    color: white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/candidate-register/candidate-register.component.css\n// module id = 810\n// module chunks = 1","module.exports = \"md-card {\\n    width: 500px;\\n}\\n\\n.formIcons {\\n    padding-bottom: 30px;\\n    color: gray;\\n}\\n\\nform {\\n    font-size: 17px;\\n}\\n\\nbutton {\\n    font-size: 15px;\\n}\\n\\nmd-card-title {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    font-size: 25px;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n.errorStyle {\\n    position: absolute;\\n    font-size: 12px;\\n    -webkit-transition: all .7s;\\n    transition: all .7s;\\n    color: #F44336;\\n}\\n\\n.googleBtn {\\n    background-color: #F44336;\\n    color: white;\\n}\\n\\n.fbBtn {\\n    background-color: #3f51b5;\\n    color: white;\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {\\n    md-card {\\n        top: 56px;\\n    }\\n}\\n\\n@media (min-width: 370px) {}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\\n\\n\\n/*for large screens*/\\n\\n@media (min-width: 768px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/forgot-password/forgot-password.component.css\n// module id = 811\n// module chunks = 1","module.exports = \".formIcons {\\n    line-height: unset;\\n}\\n\\n.fill-remaining-space {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n\\n.mainHeader {\\n    top: 0px;\\n    position: fixed;\\n    z-index: 1000;\\n}\\n\\n.langBar {\\n    margin-top: 64px;\\n    background-color: #EEEEEE;\\n    padding-left: 20px;\\n    padding-right: 20px;\\n    text-align: center;\\n    overflow: scroll;\\n    height: 90px;\\n}\\n\\n.langBtn {\\n    color: white;\\n    color: #616161;\\n    margin: 5px;\\n}\\n\\n.logo {\\n    text-align: center;\\n    margin: auto;\\n    font-size: 30px;\\n    font-weight: bold;\\n    color: whitesmoke;\\n    -webkit-text-decoration-line: none;\\n            text-decoration-line: none\\n}\\n\\n.center {\\n    margin: auto;\\n    text-align: center;\\n}\\n\\nmd-select {\\n    color: red;\\n}\\n\\n.logo:hover {\\n    color: white;\\n}\\n\\n.footer {\\n    opacity: .9;\\n    display: block;\\n    max-height: unset;\\n    height: 150px;\\n    width: 100%;\\n    margin-top: 80px;\\n    /*display: block;*/\\n    /*position: relative;*/\\n}\\n\\n.footerHead {\\n    /*margin: auto;*/\\n    font-size: 20px;\\n    text-align: center;\\n    color: white;\\n    /*margin: auto;*/\\n    margin-top: 80px;\\n    margin-left: 10%;\\n}\\n\\n.footerLinks {\\n    margin-top: 80px;\\n    color: white;\\n    margin-right: 10%;\\n}\\n\\n.footerLinks ul li a {\\n    color: white;\\n    font-size: 15px;\\n    text-decoration: unset;\\n}\\n\\n.footerLinks ul li {\\n    list-style: none;\\n}\\n\\n.copyright {\\n    display: block;\\n}\\n\\n.copyright p {\\n    font-size: 15px;\\n    padding: 0px;\\n    margin: auto;\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {\\n    .footer {\\n        margin-top: 0;\\n    }\\n}\\n\\n@media (min-width: 370px) {}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {\\n    .footer {\\n        margin-top: 0;\\n    }\\n}\\n\\n\\n/*\\nfor large screens*/\\n\\n@media (min-width: 768px) {\\n    .footer {\\n        margin-top: 100px;\\n    }\\n}\\n\\n\\n/*\\n@media (min-height: 10px) {\\n.page-footer {\\nmargin: 0px;\\ntext-align: center;\\n}\\n}\\n\\n@media (min-height: 1000px) {\\n.page-footer {\\nmargin: 0px;\\nposition: absolute;\\nbottom: 0px;\\ntext-align: center;\\nwidth: 100%;\\n}\\n}*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login-footer/login-footer.component.css\n// module id = 812\n// module chunks = 1","module.exports = \".formIcons {\\n    line-height: unset;\\n}\\n\\n* {\\n    font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.mainHeader {\\n    top: 0px;\\n    position: fixed;\\n    z-index: 1000;\\n}\\n\\n.langBar {\\n    margin-top: 64px;\\n    background-color: #EEEEEE;\\n    padding-left: 50px;\\n    padding-right: 50px;\\n    text-align: center;\\n}\\n\\n.langBtn {\\n    color: white;\\n    color: #616161;\\n    margin: 1px;\\n}\\n\\n.logo {\\n    text-align: center;\\n    margin: auto;\\n    font-size: 30px;\\n    font-weight: bold;\\n    color: whitesmoke;\\n    -webkit-text-decoration-line: none;\\n            text-decoration-line: none\\n}\\n\\n.center {\\n    margin: auto;\\n    text-align: center;\\n}\\n\\nmd-select {\\n    color: red;\\n}\\n\\n.logo:hover {\\n    color: white;\\n}\\n\\n.footer {\\n    opacity: .9;\\n    display: block;\\n    max-height: unset;\\n    height: 150px;\\n    /*display: block;*/\\n    /*position: relative;*/\\n}\\n\\n.footerHead {\\n    margin: auto;\\n    font-size: 20px;\\n    text-align: center;\\n    color: white;\\n}\\n\\n.footerLinks {\\n    /*padding-left: 30%;*/\\n    color: white;\\n}\\n\\n.footerLinks ul li a {\\n    color: white;\\n    font-size: 15px;\\n    text-decoration: unset;\\n}\\n\\n.footerLinks ul li {\\n    list-style: none;\\n}\\n\\n.copyright {\\n    display: block;\\n}\\n\\n.copyright p {\\n    font-size: 15px;\\n    padding: 0px;\\n    margin: auto;\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {}\\n\\n@media (min-width: 370px) {}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {}\\n\\n\\n/*\\nfor large screens*/\\n\\n@media (min-width: 768px) {}\\n\\n\\n/*\\n@media (min-height: 10px) {\\n.page-footer {\\nmargin: 0px;\\ntext-align: center;\\n}\\n}\\n\\n@media (min-height: 1000px) {\\n.page-footer {\\nmargin: 0px;\\nposition: absolute;\\nbottom: 0px;\\ntext-align: center;\\nwidth: 100%;\\n}\\n}*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login-header/login-header.component.css\n// module id = 813\n// module chunks = 1","module.exports = \"md-card {\\n    width: 500px;\\n}\\n\\n.formIcons {\\n    padding-bottom: 30px;\\n    color: gray;\\n}\\n\\nform {\\n    font-size: 17px;\\n}\\n\\nbutton {\\n    font-size: 15px;\\n}\\n\\nmd-card-title {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    font-size: 25px;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n.errorStyle {\\n    position: absolute;\\n    font-size: 12px;\\n    -webkit-transition: all .7s;\\n    transition: all .7s;\\n    color: #F44336;\\n}\\n\\n.googleBtn {\\n    background-color: #F44336;\\n    color: white;\\n}\\n\\n.fbBtn {\\n    background-color: #3f51b5;\\n    color: white;\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {\\n    md-card {\\n        top: 56px;\\n    }\\n}\\n\\n@media (min-width: 370px) {}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\\n\\n\\n/*for large screens*/\\n\\n@media (min-width: 768px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login/login.component.css\n// module id = 814\n// module chunks = 1","module.exports = \"md-card {\\n    width: 500px;\\n}\\n\\n.formIcons {\\n    padding-bottom: 30px;\\n    color: gray;\\n}\\n\\nform {\\n    font-size: 17px;\\n}\\n\\nbutton {\\n    font-size: 15px;\\n}\\n\\nmd-card-title {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    font-size: 25px;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n.errorStyle {\\n    position: absolute;\\n    font-size: 12px;\\n    -webkit-transition: all .7s;\\n    transition: all .7s;\\n    color: #F44336;\\n}\\n\\n.googleBtn {\\n    background-color: #F44336;\\n    color: white;\\n}\\n\\n.fbBtn {\\n    background-color: #3f51b5;\\n    color: white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/password-reset/password-reset.component.css\n// module id = 815\n// module chunks = 1","module.exports = \"md-card {\\n    width: 500px;\\n}\\n\\n.formIcons {\\n    padding-bottom: 30px;\\n    color: gray;\\n}\\n\\nform {\\n    font-size: 17px;\\n}\\n\\nbutton {\\n    font-size: 15px;\\n}\\n\\nmd-card-title {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    font-size: 25px;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n.errorStyle {\\n    position: absolute;\\n    font-size: 12px;\\n    -webkit-transition: all .7s;\\n    transition: all .7s;\\n    color: #F44336;\\n}\\n\\n.googleBtn {\\n    background-color: #F44336;\\n    color: white;\\n}\\n\\n.fbBtn {\\n    background-color: #3f51b5;\\n    color: white;\\n}\\n\\n\\n/*for smaller screens*/\\n\\n@media (min-width: 10px) {\\n    md-card {\\n        top: 56px;\\n    }\\n}\\n\\n@media (min-width: 370px) {}\\n\\n\\n/*for Medium screens*/\\n\\n@media (min-width: 480px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\\n\\n\\n/*for large screens*/\\n\\n@media (min-width: 768px) {\\n    md-card {\\n        top: 0px;\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/verify-email/verify-email.component.css\n// module id = 816\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/logout/logout.component.css\n// module id = 817\n// module chunks = 1","module.exports = \"<!--<div *ngIf=\\\"loginStatus==true\\\">\\n    <app-layout></app-layout>\\n</div>\\n<div *ngIf=\\\"loginStatus==false\\\">\\n    <app-login-layout></app-login-layout>\\n</div>-->\\n\\n<router-outlet></router-outlet>\\n\\n<!--<app-candidate-register></app-candidate-register>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 818\n// module chunks = 1","module.exports = \"<!--main content goes here-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n    <md-grid-tile>\\n        <md-card>\\n            <p>\\n                About us\\n            </p>\\n            <p>\\n                Coming soon..\\n            </p>\\n\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about-us/about-us.component.html\n// module id = 819\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/appbar/appbar.component.html\n// module id = 820\n// module chunks = 1","module.exports = \"<!--main content goes here-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n    <md-grid-tile>\\n        <md-card>\\n            <p>\\n                Candidate Search page\\n            </p>\\n            <p>\\n                Coming soon...\\n            </p>\\n\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/candidate-search/candidate-search.component.html\n// module id = 821\n// module chunks = 1","module.exports = \"<md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n    <md-grid-tile>\\n        <md-card>\\n            <p>\\n                Dashboard\\n            </p>\\n            <p>\\n                Coming soon..\\n            </p>\\n\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = 822\n// module chunks = 1","module.exports = \"<!--main content goes here-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n    <md-grid-tile>\\n        <md-card>\\n            <p>\\n                event-post works!\\n            </p>\\n            <p>\\n                Coming soon..\\n            </p>\\n\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event-post/event-post.component.html\n// module id = 823\n// module chunks = 1","module.exports = \"<md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n    <md-grid-tile>\\n        <md-card>\\n            <p>\\n                job-post works!\\n            </p>\\n            <p>\\n                Coming soon..\\n            </p>\\n\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/job-post/job-post.component.html\n// module id = 824\n// module chunks = 1","module.exports = \"<!--sidenav and toolbar with content-->\\n<md-sidenav-container fullscreen [class.m2app-dark]=\\\"isDarkTheme\\\">\\n\\n    <!--sidenav starts here..-->\\n    <md-sidenav #sidenav mode=\\\"over\\\" opened=\\\"false\\\">\\n\\n        <!--sidenav toobar-->\\n        <md-toolbar color=\\\"primary\\\" class=\\\"toolbar\\\">\\n            <b>Samarthya</b>\\n        </md-toolbar>\\n\\n        <!--sidenav ites list-->\\n        <md-nav-list>\\n            <md-list-item *ngFor=\\\"let navItem of navList\\\" routerLink={{navItem.path}} routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.toggle()\\\">\\n                <i class=\\\"material-icons navIcon\\\">{{navItem.icon}}</i>\\n                <p class=\\\"navItem\\\"> {{navItem.name}}</p>\\n            </md-list-item>\\n        </md-nav-list>\\n    </md-sidenav>\\n    <!--sidenav ends-->\\n\\n    <!--main appbar starts-->\\n    <md-toolbar color=\\\"primary\\\" class=\\\"toolbar\\\">\\n        <!--sidebar toggle button-->\\n        <a md-icon-button (click)=\\\"sidenav.toggle()\\\" #myButton id=\\\"sidebarButton\\\">\\n            <i class=\\\"material-icons\\\">menu</i>\\n        </a>\\n        <span><b class=\\\"headerLarge\\\">Samarthya Candidate</b></span>\\n        <span><b class=\\\"headerSmall\\\">Samarthya</b></span>\\n\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        <button md-button (click)=\\\"toggleTheme()\\\">TOGGLE DARK THEME</button>\\n        <!--appbar buttons-->\\n        <!--notification button-->\\n        <a md-icon-button [mdMenuTriggerFor]=\\\"menuNotification\\\">\\n            <i class=\\\"material-icons\\\">notifications_active</i>\\n        </a>\\n        <md-menu #menuNotification x-position=\\\"before\\\">\\n            <md-list>\\n                <md-list-item>\\n                    <p md-line>No new Notification</p>\\n                </md-list-item>\\n            </md-list>\\n        </md-menu>\\n        <!--user account button-->\\n        <a md-icon-button [mdMenuTriggerFor]=\\\"menuAccount\\\">\\n            <i class=\\\"material-icons\\\">account_circle</i>\\n        </a>\\n        <md-menu #menuAccount x-position=\\\"before\\\">\\n            <md-nav-list>\\n                <md-list-item>\\n                    <p md-line><b>User</b></p>\\n                </md-list-item>\\n                <md-list-item>\\n                    <p md-line>Profile</p>\\n                </md-list-item>\\n                <md-list-item>\\n                    <p md-line>Change Password</p>\\n                </md-list-item>\\n                <md-list-item>\\n                    <p md-line (click)=\\\"logout()\\\">\\n                        Log Out\\n                    </p>\\n                </md-list-item>\\n            </md-nav-list>\\n        </md-menu>\\n    </md-toolbar>\\n    <!--main appbar starts-->\\n    <!--add the components tags here....-->\\n    <!--main content ends here-->\\n\\n\\n    <router-outlet></router-outlet>\\n\\n</md-sidenav-container>\\n<!--sidenav and toolbar with content ends-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/layout/layout.component.html\n// module id = 825\n// module chunks = 1","module.exports = \"<!--login Header-->\\n<app-login-header></app-login-header>\\n\\n<!--Register card-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"1200\\\">\\n    <md-grid-tile>\\n        <!--card Start-->\\n        <md-card class=\\\"loginCard\\\">\\n            <md-card-title>Register</md-card-title>\\n            <md-card-content>\\n                <form [formGroup]=\\\"userForm\\\">\\n\\n                    <!--First Name-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">perm_identity</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"fname\\\" id=\\\"fname\\\" required type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"First Name\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('fname').hasError('required') && userForm.get('fname').touched\\\" class=\\\"errorStyle\\\">\\n                                        First Name is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('fname').hasError('pattern')\\\" class=\\\"errorStyle\\\">\\n                                        First Name is too small\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.fname\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Last Name-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">perm_identity</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"lname\\\" required id=\\\"lname\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Last Name\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('lname').hasError('required') && userForm.get('lname').touched\\\" class=\\\"errorStyle\\\">\\n                                        Last Name is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('lname').hasError('pattern')\\\" class=\\\"errorStyle\\\">\\n                                        Last Name is too small\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.lname\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Gender-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"gender\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons levelIcon\\\">wc</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\" class=\\\"full-width\\\">\\n                            <md-radio-group formControlName=\\\"gender\\\">\\n                                <md-radio-button value=\\\"male\\\">Male</md-radio-button>\\n                                <md-radio-button value=\\\"female\\\">Female</md-radio-button>\\n                            </md-radio-group>\\n                        </div>\\n                    </div>\\n\\n                    <!--Registration ID-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">assignment_ind</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"regId\\\" id=\\\"regId\\\" required type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Registration Id\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('regId').hasError('required') && userForm.get('regId').touched\\\" class=\\\"errorStyle\\\">\\n                                        Registration ID is required\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.regId\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Date of Birth-->\\n                    <!--<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <label for=\\\"\\\">asdasd</label>\\n                            <md2-datepicker formControlName=\\\"dob\\\" [(ngModel)]=\\\"date\\\" class=\\\"full-width\\\">date</md2-datepicker>\\n                        </div>\\n                    </div>-->\\n\\n\\n                    <!--Email-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">mail</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" value={{emailId}} placeholder=\\\"Email\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <!--<div *ngIf=\\\"userForm.get('aadhar').hasError('pattern')\\\" class=\\\"errorStyle\\\">Invaild Email</div>-->\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.email\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Adhar-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">chrome_reader_mode</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"aadhar\\\" id=\\\"aadhar\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Aadhar No.\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('aadhar').hasError('pattern')\\\" class=\\\"errorStyle\\\">Invaild Aadhar</div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.aadhar\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Mobile No-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">call</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"mob\\\" id=\\\"mob\\\" type=\\\"text\\\" required class=\\\"validate\\\" placeholder=\\\"Mobile No.\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('mob').hasError('pattern')\\\" class=\\\"errorStyle\\\">Invaild Mobile</div>\\n                                    <div *ngIf=\\\"userForm.get('mob').hasError('required') && userForm.get('mob').touched\\\" class=\\\"errorStyle\\\">\\n                                        Mobile No. is required\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.mob\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--passowrd-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">lock</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" required class=\\\"validate\\\" #password (blur)=\\\"passwordValue(password.value)\\\" placeholder=\\\"Password\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('required') && userForm.get('password').touched\\\" class=\\\"errorStyle\\\">\\n                                        Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('pattern')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid password. Password must be at least 6 characters long, and contain a number\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.password\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--confirm password-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">lock</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"conPassword\\\" required id=\\\"conPassword\\\" type=\\\"password\\\" class=\\\"validate\\\" #conPassword (keyup)=\\\"conPasswordValue(conPassword.value)\\\" placeholder=\\\"Confirm Password\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('conPassword').hasError('required') && userForm.get('conPassword').touched\\\" class=\\\"errorStyle\\\">\\n                                        Confirm Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"passwordMatchWarning\\\" class=\\\"errorStyle\\\">{{passwordMatchWarning}}</div>\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Profession-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"dropdown\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons levelIcon\\\">layers</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-select placeholder=\\\"Profession\\\" aria-required=\\\"\\\" formControlName=\\\"profession\\\" class=\\\"full-width\\\">\\n                                <md-option *ngFor=\\\"let pro of profession\\\" color=\\\"accent\\\" [value]=\\\"pro.value\\\">\\n                                    {{ pro.name }}\\n                                </md-option>\\n                            </md-select>\\n                        </div>\\n                    </div>\\n\\n                    <!--location Pincode-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons\\\">dialpad</i>\\n                        </div>\\n                        <div fxFlex>\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"pincode\\\" required id=\\\"pincode\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Pincode\\\" [(ngModel)]=\\\"pincode\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('pincode').hasError('pattern')\\\" class=\\\"errorStyle\\\">Invaild Pincode</div>\\n                                    <div *ngIf=\\\"userForm.get('pincode').hasError('required') && userForm.get('pincode').touched\\\" class=\\\"errorStyle\\\">\\n                                        Pincode is required\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.pincode\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                        <div fxFlex.gt-xs=\\\"25\\\" fxFlex.xs class=\\\"findAreaBtn\\\">\\n                            <button md-raised-button color=\\\"primary\\\" (click)=\\\"getPincode()\\\">Search Location</button>\\n                        </div>\\n                    </div>\\n\\n                    <!--location area-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"dropdown\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons levelIcon\\\">my_location</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-select formControlName=\\\"location\\\" placeholder=\\\"Select Area\\\" class=\\\"full-width\\\">\\n                                <md-option *ngFor=\\\"let area of areaList\\\" [value]=\\\"area\\\">\\n                                    {{ area }}\\n                                </md-option>\\n                            </md-select>\\n                        </div>\\n                    </div>\\n                    <!--placementCenter-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"dropdown\\\">\\n                        <div fxFlex.xs=\\\"10\\\" fxFlex.gt-xs=\\\"7\\\">\\n                            <i class=\\\"material-icons formIcons levelIcon\\\">person_pin_circle</i>\\n                        </div>\\n                        <div fxFlex.xs=\\\"90\\\" fxFlex.gt-xs=\\\"93\\\">\\n                            <md-select placeholder=\\\"Placement Center\\\" formControlName=\\\"placementCenter\\\" class=\\\"full-width\\\">\\n                                <md-option *ngFor=\\\"let center of placementCenter\\\" [value]=\\\"center.value\\\">\\n                                    {{ center.name }}\\n                                </md-option>\\n                            </md-select>\\n                        </div>\\n                    </div>\\n\\n                    <!--Register Button-->\\n                    <div fxLayout=\\\"row\\\">\\n                        <button md-raised-button color=\\\"accent\\\" class=\\\"full-width registerBtn\\\" type=\\\"submit\\\" (click)=\\\"onRegister()\\\" id=\\\"resetBtn\\\" [disabled]=\\\"!userForm.valid\\\">Register</button>\\n                    </div>\\n\\n                </form>\\n            </md-card-content>\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\\n\\n<!--footer-->\\n<app-login-footer></app-login-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/candidate-register/candidate-register.component.html\n// module id = 826\n// module chunks = 1","module.exports = \"<!--login Header-->\\n<app-login-header></app-login-header>\\n\\n<!--login card-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"350px\\\">\\n    <md-grid-tile>\\n        <md-card class=\\\"loginCard\\\">\\n            <md-card-title>Password Reset</md-card-title>\\n            <md-card-content>\\n                <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onResetLink()\\\">\\n\\n                    <!--Email input-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">email</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Email\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('required') && userForm.get('email').touched\\\" class=\\\"errorStyle\\\">\\n                                        Email is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('pattern') && userForm.get('email')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid email\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.email\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Reset Password button-->\\n                    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"accent\\\" class=\\\"full-width\\\" [disabled]=\\\"!userForm.valid\\\">Send Reset Link</button>\\n                        </div>\\n                        <div fxFlex></div>\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"warn\\\" (click)=onBack() class=\\\"full-width\\\">Back</button>\\n                        </div>\\n                    </div>\\n\\n                </form>\\n            </md-card-content>\\n        </md-card>\\n        <!--card-ends-->\\n    </md-grid-tile>\\n</md-grid-list>\\n\\n<!--footer-->\\n<app-login-footer></app-login-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/forgot-password/forgot-password.component.html\n// module id = 827\n// module chunks = 1","module.exports = \"<!--footer starts-->\\n<div class=\\\"langBar\\\" fxFlex fxHide.gt-xs>\\n    <button *ngFor=\\\"let lang of languages\\\" title={{lang.name}} class=\\\"langBtn\\\" md-button>\\n   <div> {{lang.nativeName}}</div>\\n    </button>\\n</div>\\n<md-toolbar color=\\\"primary\\\" class=\\\"footer\\\">\\n    <div class=\\\"footerHead\\\">\\n        <h5>Samarthya</h5>\\n    </div>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <div class=\\\"footerLinks\\\">\\n        <ul>\\n            <li><a class=\\\"grey-text text-lighten-3\\\" href=\\\"#\\\">Samarthya Candidate</a></li>\\n            <li><a class=\\\"grey-text text-lighten-3\\\" href=\\\"#\\\">Samarthya Placement</a></li>\\n            <li><a class=\\\"grey-text text-lighten-3\\\" href=\\\"#\\\">FAQ</a></li>\\n            <li><a class=\\\"grey-text text-lighten-3\\\" href=\\\"#\\\">About Us</a></li>\\n        </ul>\\n    </div>\\n\\n</md-toolbar>\\n<md-toolbar color=\\\"primary\\\" class=\\\"copyright\\\">\\n    <p> © Copyright Samarthya 2017</p>\\n</md-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login-footer/login-footer.component.html\n// module id = 828\n// module chunks = 1","module.exports = \"<!--Header start-->\\n<md-toolbar color=\\\"primary\\\" class=\\\"mainHeader\\\">\\n    <!--<a href=\\\"/\\\">-->\\n    <p class=\\\"logo\\\">Samarthya</p>\\n    <!--</a>-->\\n</md-toolbar>\\n<div class=\\\"langBar\\\" fxFlex fxHide.xs>\\n    <button *ngFor=\\\"let lang of languages\\\" title={{lang.name}} class=\\\"langBtn\\\" md-button>\\n   <div> {{lang.nativeName}}</div>\\n    </button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login-header/login-header.component.html\n// module id = 829\n// module chunks = 1","module.exports = \"<!--login Header-->\\n<app-login-header></app-login-header>\\n\\n<!--login card-->\\n<div *ngIf=\\\"showProgress\\\" class=\\\"progressBar\\\">\\n    <md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar>\\n</div>\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"600px\\\">\\n    <md-grid-tile>\\n        <md-card class=\\\"loginCard\\\">\\n            <md-card-title>LOGIN</md-card-title>\\n            <md-card-content>\\n\\n                <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"login()\\\">\\n                    <!--Email input-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">mail</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Email\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('required') && userForm.get('email').touched\\\" class=\\\"errorStyle\\\">\\n                                        Email is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('pattern') && userForm.get('email')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid email\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.email\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--passowrd input-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">lock</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('required') && userForm.get('password').touched\\\" class=\\\"errorStyle\\\">\\n                                        Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('pattern')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid password. Password must be at least 6 characters long, and contain a number\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.password\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--sign in button-->\\n                    <div fxLayout=\\\"row\\\">\\n                        <div fxFlex=\\\"100\\\">\\n                            <button md-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"full-width largeBtn\\\" [disabled]=\\\"!userForm.valid\\\">Sign in</button>\\n                        </div>\\n                    </div>\\n                </form>\\n\\n                <!--forgot Password button-->\\n                <div fxLayout=\\\"row\\\">\\n                    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n                        <button md-button color=\\\"primary\\\" (click)=\\\"forgotPassword()\\\" class=\\\"\\\">Forgot Password ?</button>\\n                    </div>\\n                </div>\\n\\n                <!--create account button-->\\n                <div fxLayout=\\\"row\\\">\\n                    <div fxFlex=\\\"100\\\">\\n                        <button md-raised-button color=\\\"primary\\\" (click)=\\\"verifyEmail()\\\" class=\\\"full-width largeBtn\\\">Create Account</button>\\n                    </div>\\n                </div>\\n\\n                <!--social media button-->\\n                <!--<div fxLayout.gt-sm=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxHide.sm>-->\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                    <div fxFlex=\\\"48\\\">\\n                        <button md-raised-button class=\\\"full-width largeBtn googleBtn\\\">\\n                                <i class=\\\"zmdi zmdi-google zmdi-hc-lg\\\"></i>\\n                                Login with Google</button>\\n                    </div>\\n                    <div fxFlex></div>\\n                    <div fxFlex=\\\"48\\\">\\n                        <button md-raised-button class=\\\"full-width largeBtn fbBtn\\\">\\n                                <i class=\\\"zmdi zmdi-facebook-box zmdi-hc-lg\\\"></i>    \\n                                Login with Facebook\\n                            </button>\\n                    </div>\\n                </div>\\n            </md-card-content>\\n        </md-card>\\n        <!--card-ends-->\\n    </md-grid-tile>\\n</md-grid-list>\\n\\n<!--footer-->\\n<app-login-footer></app-login-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/login/login.component.html\n// module id = 830\n// module chunks = 1","module.exports = \"<!--login Header-->\\n<app-login-header></app-login-header>\\n\\n<!--Reset Password card-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"600\\\">\\n    <md-grid-tile>\\n        <!--card Start-->\\n        <md-card class=\\\"loginCard blue-grey-text\\\">\\n            <md-card-title>Password Reset</md-card-title>\\n            <md-card-content>\\n                <form class=\\\"col s12\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                    <!--Email-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">email</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" value={{emailId}} placeholder=\\\"Email\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.email\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--passowrd-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">lock</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" #password (blur)=\\\"passwordValue(password.value)\\\" placeholder=\\\"Password\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('required') && userForm.get('password').touched\\\" class=\\\"errorStyle\\\">\\n                                        Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('password').hasError('pattern')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid password. Password must be at least 6 characters long, and contain a number\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.password\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--confirm password-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">lock</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"conPassword\\\" id=\\\"conPassword\\\" type=\\\"password\\\" class=\\\"validate\\\" #conPassword (keyup)=\\\"conPasswordValue(conPassword.value,password.value)\\\" placeholder=\\\"Confirm Password\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('conPassword').hasError('required') && userForm.get('conPassword').touched\\\" class=\\\"errorStyle\\\">\\n                                        Confirm Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"passwordMatchWarning\\\" class=\\\"errorStyle\\\">{{passwordMatchWarning}}</div>\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Reset Button-->\\n                    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"accent\\\" class=\\\"full-width\\\" type=\\\"submit\\\" id=\\\"resetBtn\\\" [disabled]=\\\"!userForm.valid\\\">Reset</button>\\n                        </div>\\n                        <div fxFlex></div>\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"warn\\\" (click)=onBack() class=\\\"full-width\\\">Back</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </md-card-content>\\n        </md-card>\\n    </md-grid-tile>\\n</md-grid-list>\\n\\n<!--footer-->\\n<app-login-footer></app-login-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/password-reset/password-reset.component.html\n// module id = 831\n// module chunks = 1","module.exports = \"<!--login Header-->\\n<app-login-header></app-login-header>\\n\\n<!--login card-->\\n<md-grid-list cols=\\\"1\\\" rowHeight=\\\"350px\\\">\\n    <md-grid-tile>\\n        <md-card class=\\\"loginCard\\\">\\n            <md-card-title>Verify Email</md-card-title>\\n            <md-card-content>\\n                <form class=\\\"col s12\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onVerifyLink()\\\">\\n\\n                    <!--Email input-->\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n                        <div fxFlex>\\n                            <i class=\\\"material-icons formIcons\\\">email</i>\\n                        </div>\\n                        <div fxFlex=\\\"93\\\">\\n                            <md-input-container class=\\\"full-width\\\">\\n                                <input mdInput formControlName=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" placeholder=\\\"Email\\\" />\\n                                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('required') && userForm.get('email').touched\\\" class=\\\"errorStyle\\\">\\n                                        Email is required\\n                                    </div>\\n                                    <div *ngIf=\\\"userForm.get('email').hasError('pattern') && userForm.get('email')\\\" class=\\\"errorStyle\\\">\\n                                        Invalid email\\n                                    </div>\\n                                    <!--<app-control-messages [control]=\\\"userForm.controls.email\\\" class=\\\"errorStyle\\\"></app-control-messages>-->\\n                                </md-hint>\\n                            </md-input-container>\\n                        </div>\\n                    </div>\\n\\n                    <!--Reset in button-->\\n                    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"accent\\\" class=\\\"full-width\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\">Verify</button>\\n                        </div>\\n                        <div fxFlex></div>\\n                        <div fxFlex=\\\"48\\\">\\n                            <button md-raised-button color=\\\"warn\\\" class=\\\"full-width\\\" (click)=onBack()>Back</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </md-card-content>\\n        </md-card>\\n        <!--card-ends-->\\n    </md-grid-tile>\\n</md-grid-list>\\n\\n<!--footer-->\\n<app-login-footer></app-login-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loginComponent/verify-email/verify-email.component.html\n// module id = 832\n// module chunks = 1","module.exports = \"<!--sidenav and toolbar with content-->\\n<md-sidenav-container fullscreen>\\n    <app-layout></app-layout>\\n\\n    <!--main content goes here-->\\n    <md-grid-list cols=\\\"1\\\" rowHeight=\\\"200px\\\">\\n        <md-grid-tile>\\n            <md-card>\\n                <p>\\n                    Successfully logged out\\n                </p>\\n                <p>\\n                    Coming soon..\\n                </p>\\n\\n            </md-card>\\n        </md-grid-tile>\\n    </md-grid-list>\\n\\n</md-sidenav-container>\\n<!--sidenav and toolbar with content ends-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/logout/logout.component.html\n// module id = 833\n// module chunks = 1","// import { EmailService } from 'app/services/email.service';\nimport { LoginComponent } from 'app/components/loginComponent/login/login.component';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class EmailService {\n  private _url = 'http://localhost:3004';\n\n  public ref: LoginComponent;\n\n  // public linksend: any = {};\n  // public data2 :LoginComponent  ;\n\n  constructor(private _http: Http) { }\n\n  postdata(mailObj: LoginComponent) {\n    // var data1=JSON.stringify({to :\"sheenamnarula1993@yahoo.com\", subject:\"abc\", text:\"hello\" });\n    const mailObjString = JSON.stringify(mailObj);\n    const params = 'json=' + mailObjString;\n    const res = '';\n    const headers = new Headers();\n\n    headers.append('Content-Type', 'application/X-www-form-urlencoded');\n    return this._http.post(this._url, params, {\n      headers: headers\n    }).map(res => res.json());\n  }\n\n  getRegister() {\n    // console.log(this.linksend.link+\"link aa gya\");\n    return <any>this._http.get('http://localhost:3004/verifiedmail')\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/email.service.ts"],"sourceRoot":""}